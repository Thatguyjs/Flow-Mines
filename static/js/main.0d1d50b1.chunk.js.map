{"version":3,"sources":["reportWebVitals.js","images/background_hd.png","settings-components/storage.js","settings-components/tooltip.js","Card.js","WeatherAPIMod.js","App.js","settings-components/dropdown.js","settings-components/radiob.js","settings-components/radio.js","settings-components/reset.js","settings-components/toggle.js","settings-components/valuefield.js","Settings.js","common/icons.svg","common/icons.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Storage","zipCode","squareFootage","sprinklerFlow","minRainChance","minRainAmt","tempThresh","daySkip","daySkipAuto","displayFmt","notifAdvance","notifDevices","units","timeFormat","textSize","refreshPeriod","_read","settings_str","localStorage","getItem","JSON","parse","_write","obj","setItem","stringify","set","name","value","this","get","load","saved","s","saveAll","ToolTip","props","state","visible","className","info","setState","React","Component","ToolTipBtn","onMouseOver","e","target","tooltip","current","show","onMouseOut","hide","id","text","createRef","type","href","ref","cardList","Card","layout","data","dayName","substring","t","temp","ret","weather","push","fontModifier","fontSizes","getFontSizes","style","background","getColor","explanation","fontSize","flexGrow","gTempStr","gTimeStr","duration","fetch","require","moment","WaterData","startTime","unitIndic","Number","toFixed","toUpperCase","day","time","expl","format","advice","key","getWeather","zip","a","api_url","api_res","Promise","res","rej","json","i","city","city_name","country","country_code","catch","err","days","getDaysList","high","max_temp","avg","low","min_temp","inches","precip","wind","wind_spd","code","date","datetime","suffRain","freezing","cooldown","leastWindy","otherDays","squareFt","flowRt","tmpThresh","rainAmtThresh","corrDay","dateBits","split","Date","setWeather","toDateString","setAdvice","totalInches","projectedPrecip","reduce","total","applyAdvice","windDays","sort","b","lowestWindDays","slice","minsPerDay","d","dayIdx","Math","round","c","getAdvice","console","warn","App","getWeekItems","list","newList","shift","map","makeItem","input","toLowerCase","src","alt","height","objectFit","to","Dropdown","renderOption","val","renderOptions","options","handleChange","event","isDisplayed","selected","cHandle","item","label","desc","onChange","RadioButton","handleClick","bind","isSelected","panelName","checked","RadioPanel","createButton","createRadioButtons","ResetButton","onClick","ToggleButton","isOn","prevState","ValueField","placeholder","settings_map","settings_descs","Zip","FR","TempThresh","RainAmtThresh","RainChanceThresh","WindThresh","Units","Display","TimeFmt","FontSize","NonFunctional","Settings","components_top","ZipDesc","components_mid","components_bottom","_buildComponent","template","setting","_loadSettingFor","createElement","update","setting_name","component","clear","window","location","reload","icons","response","document","getElementById","innerHTML","ReactDOM","render","StrictMode","basename","process","exact","path"],"mappings":"yOAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCPC,G,YAAA,IAA0B,2CCEnCQ,EAAU,CACfC,QAAS,KAETC,cAAe,KACfC,cAAe,KAEfC,cAAe,GACfC,WAAY,EAEZC,WAAY,KAEZC,QAAS,KACTC,aAAa,EAIbC,WAAY,SACZC,aAAc,KACdC,aAAc,KAEdC,MAAO,WACPC,WAAY,UACZC,SAAU,SAEVC,cAAe,KAIfC,MA5Be,WA6Bd,IAAIC,EAAeC,aAAaC,QAAQ,YAExC,OAAIF,EACGG,KAAKC,MAAMJ,GADO,IAM1BK,OArCe,SAqCRC,GACNL,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUF,KAKjDG,IA3Ce,SA2CXC,EAAMC,GACJD,KAAQE,OACbA,KAAKF,GAAQC,IAIdE,IAjDe,SAiDXH,GACH,OAAOE,KAAKF,IAKbI,KAvDe,WAwDd,IAAIC,EAAQH,KAAKb,QAEjB,IAAI,IAAIiB,KAAKD,EACZH,KAAKI,GAAKD,EAAMC,IAMlBC,QAjEe,WAkEd,IAAIX,EAAM,CACT,QAAW,KACX,cAAiB,KACjB,cAAiB,KACjB,WAAc,KACd,WAAc,KACd,cAAiB,KACjB,QAAW,KACX,YAAe,KACf,MAAS,KACT,WAAc,KACd,cAAiB,KACjB,WAAc,KACd,aAAgB,KAChB,SAAY,MAGb,IAAI,IAAII,KAAQJ,EACfA,EAAII,GAAQE,KAAKF,GAGlBE,KAAKP,OAAOC,KAKdvB,EAAQ+B,OACO/B,Q,OC7FTmC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,SAAS,GAFT,E,0CAKnB,WAEI,OACI,8BAEQT,KAAKQ,MAAMC,QACP,sBAAKC,UAAU,kBAAf,cAAmCV,KAAKO,MAAMI,QAC9C,S,kBAMpB,WACIX,KAAKY,SAAS,CAAEH,SAAS,M,kBAG7B,WACIT,KAAKY,SAAS,CAAEH,SAAS,Q,GAxBXI,IAAMC,WA6BtBC,E,kDAEF,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAKVS,YAAc,SAAAC,GACM,MAAZA,EAAEC,QACF,EAAKC,QAAQC,QAAQC,QARV,EAYnBC,WAAa,SAAAL,GACT,EAAKE,QAAQC,QAAQG,QAXrB,EAAKf,MAAQ,CAAEgB,GAAIjB,EAAMiB,GAAIC,KAAMlB,EAAMkB,MACzC,EAAKN,QAAUN,IAAMa,YAHN,E,0CAgBnB,WACI,OACI,sBAAKhB,UAAY,kBAAjB,UACI,wBAAQiB,KAAK,iBAAiBH,GAAIxB,KAAKQ,MAAMgB,GAAIR,YAAahB,KAAKgB,YAAaM,WAAYtB,KAAKsB,WAAjG,SACI,qBAAKZ,UAAU,YAAf,SACI,qBAAKkB,KAAK,cAGlB,cAAC,EAAD,CAASC,IAAK7B,KAAKmB,QAASR,KAAMX,KAAKO,MAAMkB,c,GA1BpCZ,IAAMC,WC5BzBgB,EAAW,GAGXC,E,kDAEL,WAAYxB,GAAQ,IAAD,8BAClB,cAAMA,IA0DPS,YAAc,SAAAC,GACS,MAAZA,EAAEC,QACF,EAAKC,QAAQC,QAAQC,QA7Db,EAiEhBC,WAAa,SAAAL,GACT,EAAKE,QAAQC,QAAQG,QAhE3B,EAAKJ,QAAUN,IAAMa,YAFH,E,2CAInB,WACC,OAAQ1B,KAAKO,MAAMyB,QAClB,IAAK,SACJ,OAAOhC,KAAKO,MAAM0B,KAAKC,QAAQC,UAAU,EAAE,GAE5C,QACC,OAAOnC,KAAKO,MAAM0B,KAAKC,W,sBAI1B,WACC,IAAME,EAAIpC,KAAKO,MAAM0B,KAAKI,KACtBC,EAAM,CAAC,EAAE,EAAE,GAuBf,OAtBIF,GAAK,IACRE,EAAI,GAAK,IACTA,EAAI,GAAK,IAAMF,EAAI,IACnBE,EAAI,GAAK,IAAMF,EAAI,KAKPA,GAAK,IACjBE,EAAI,GAAgB,GAAVF,EAAI,IACdE,EAAI,GAAK,IAAM,GAAKF,EAAI,IACxBE,EAAI,GAAK,IAAM,GAAKF,EAAI,KAExBE,EAAM,CAAC,IAAI,IAAI,IAAK,OAGU,UAA3BtC,KAAKO,MAAM0B,KAAKM,UACnBD,EAAI,GAAK,GACTA,EAAI,GAAK,GACTA,EAAI,GAAK,IACTA,EAAI,GAAK,QAEH,OAASA,EAAM,M,+BAIvB,WACCR,EAASU,KAAKxC,Q,0BAGf,SAAagC,GACZ,IAEMS,EADa,CAAE,MAAS,GAAK,OAAU,EAAG,MAAS,KADvCtE,EAAQ8B,IAAI,aAG9B,MAAe,SAAX+B,EACI,CAAC,QAAUS,EAAe,SAAS,QAAUA,EAAe,UAE5D,CAAC,QAAUA,EAAe,UAAU,QAAUA,EAAe,a,oBAgBtE,WACC,IAAMC,EAAY1C,KAAK2C,aAAa3C,KAAKO,MAAMyB,QAC/C,OACC,sBAAKtB,UAAS,oBAAeV,KAAKO,MAAMyB,QAAUY,MAAO,CAAEC,WAAY7C,KAAK8C,YAAc9B,YAAahB,KAAKgB,YAAaM,WAAYtB,KAAKsB,WAA1I,UACC,cAAC,EAAD,CAASO,IAAK7B,KAAKmB,QAASR,KAAMX,KAAKO,MAAM0B,KAAKc,cAClD,oBAAIH,MAAO,CAAEI,SAAUN,EAAU,IAAjC,SAAwC1C,KAAKkC,YAC7C,sBAAKxB,UAAU,YAAf,UACC,sBAAKA,UAAU,eAAekC,MAAO,CAACI,SAAUN,EAAU,IAA1D,UACC,8BAAK,qBAAKhC,UAAY,YAAjB,SAA6B,qBAAKkB,KAAI,wBAAmB5B,KAAKO,MAAM0B,KAAKM,eACvD,SAAtBvC,KAAKO,MAAMyB,OAAoB,qBAAKY,MAAO,CAAEK,SAAU,OAAW,GACnE,8BAAK,+BAAOjD,KAAKO,MAAM0B,KAAKiB,SAAS/E,EAAQ8B,IAAI,iBAElD,qBAAK2C,MAAO,CAAEK,SAAU,QACxB,sBAAKL,MAAO,CAACI,SAAUN,EAAU,IAAMhC,UAAU,gBAAjD,UACC,8BAAK,qBAAKA,UAAY,YAAjB,SAA6B,qBAAKkB,KAAK,oBAC5C,8BAAK,+BAAO5B,KAAKO,MAAM0B,KAAKkB,SAAShF,EAAQ8B,IAAI,mBAEjD,8BAAK,qBAAMS,UAAY,YAAlB,SAA8B,qBAAKkB,KAAK,wBAC7C,8BAAK,+BAAO5B,KAAKO,MAAM0B,KAAKmB,0B,GA1FfvC,IAAMC,W,yBCHnBuC,EAAQC,EAAQ,IAChBC,EAASD,EAAQ,IAGjBE,E,WACL,aAAmG,IAAvFtB,EAAsF,uDAA9E,GAAIK,EAA0E,uDAAlE,KAAMF,EAA4D,uDAAvD,KAAMoB,EAAiD,uDAAvC,KAAML,EAAiC,uDAAxB,KAAML,EAAkB,uDAAN,KAAM,oBACjG/C,KAAKkC,QAAUA,EACflC,KAAKuC,QAAUA,EACfvC,KAAKqC,KAAOA,EACZrC,KAAKyD,UAAYA,EACjBzD,KAAKoD,SAAWA,EAChBpD,KAAK+C,YAAcA,E,4CAIpB,SAAShE,GACR,IAAKZ,EAAQ8B,IAAI,WAChB,MAAO,eAER,IAAIoC,EACAqB,EAAY,IAOhB,MANc,WAAV3E,GACHsD,EAAOsB,QAAQ3D,KAAKqC,KAAO,IAAM,KAAKuB,QAAQ,GAC9CF,EAAY,KAEZrB,EAAOrC,KAAKqC,KAENA,EAAO,OAAMqB,EAAUG,gB,wBAG/B,SAAWC,EAAKzB,EAAME,GACrBvC,KAAKkC,QAAU4B,EACf9D,KAAKqC,KAAOA,EACZrC,KAAKuC,QAAUA,I,uBAGhB,SAAWwB,EAAMX,EAAUY,GAC1BhE,KAAKyD,UAAYM,EACjB/D,KAAKoD,SAAWA,EAChBpD,KAAK+C,YAAciB,I,sBAGpB,SAASjF,GACR,MAAuB,QAAnBiB,KAAKyD,UACDzD,KAAKyD,UACQ,YAAV1E,EACHwE,EAAOvD,KAAKyD,UAAW,CAAC,WAAWQ,OAAO,SAE1CjE,KAAKyD,c,KAOTlB,EAAU,GACZ2B,EAAS,CACZ,IAAIV,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,GAGCW,EAAM,mC,SAKGC,E,8EAAf,WAA0BC,GAA1B,iBAAAC,EAAA,6DACKC,EADL,oEAC4EF,EAD5E,wBAC+FF,GAD/F,SAGuBd,EAAMkB,GAH7B,cAGOC,EAHP,yBAKQ,IAAIC,SAAQ,SAACC,EAAKC,GACxBH,EAAQI,OAAO/G,MAAK,SAAC8C,GACpB,IAAI,IAAIkE,KAAKlE,EAAKsB,KACjBM,EAAQsC,GAAKlE,EAAKsB,KAAK4C,GAExBtC,EAAQuC,KAAOnE,EAAKoE,UACpBxC,EAAQyC,QAAUrE,EAAKsE,aAEvBP,GAAI,MACFQ,OAAM,SAACC,GACTT,GAAI,UAfP,4C,sBAmCA,IAAMU,EAAO,GACb,SAASC,IACR,IAAI,IAAIR,EAAI,EAAGA,EAAI,EAAGA,IAErBO,EAAKP,GAAK,CACTf,IAAKe,EAELS,KAAM/C,EAAQsC,GAAGU,SACjBC,IAAKjD,EAAQsC,GAAGxC,KAChBoD,IAAKlD,EAAQsC,GAAGa,SAEhBC,OAAQpD,EAAQsC,GAAGe,OACnBC,KAAMtD,EAAQsC,GAAGiB,SACjBvD,SA3BkBwD,EA2BGxD,EAAQsC,GAAGtC,QAAQwD,KA1BrC,KAAOA,GAAQA,GAAQ,KAAkB,MAATA,EAC7B,QACI,KAAOA,GAAQA,GAAQ,KAAS,KAAOA,GAAQA,GAAQ,IAC3D,SACY,MAATA,EACH,QACG,KAAOA,GAAQA,GAAQ,IAC1B,gBAEA,QAmBNC,KAAMzD,EAAQsC,GAAGoB,UA7BpB,IAAqBF,EAkCrB,IAAMG,EAAW,yEACXC,EAAW,iFACXC,EAAQ,uCAAmCjI,EAAQ8B,IAAI,eAAiB,GAAhE,4EACRoG,EAAa,oGACbC,EAAY,yD,4CAElB,4DAAAhC,EAAA,sEAEqBF,EAAWjG,EAAQC,SAFxC,2DAGqB,GAHrB,OAqBC,IAfImI,EAAWpI,EAAQ8B,IAAI,iBACvBuG,EAAS,GACwB,OAAjCrI,EAAQ8B,IAAI,kBAA0C,OAAbsG,IAC5CC,EAAU,EAAGrI,EAAQ8B,IAAI,iBAAoBsG,GAAW,IAAI,MAEzDE,EAAYtI,EAAQ8B,IAAI,eAAiB,GACzCyG,EAAgB,EACc,OAA9BvI,EAAQ8B,IAAI,gBACfyG,EAAgBvI,EAAQ8B,IAAI,eAK7BoF,IAESR,EAAI,EAAGA,EAAI,EAAGA,IAClB8B,EAAUvB,EAAKP,GACf+B,EAAWD,EAAQX,KAAKa,MAAM,KAC9Bb,EAAO,IAAIc,KAAKF,EAAS,GAAIA,EAAS,GAAK,EAAGA,EAAS,IAE3D1C,EAAOW,GAAGkC,WAAWf,EAAKgB,eAAe7E,UAAU,EAAG,GAAIwE,EAAQnB,IAAKmB,EAAQpE,SAC/E2B,EAAOW,GAAGoC,UAAU,MAAO,QAASX,GA3BtC,GA8BKY,EAAcR,KACdS,EAAkB/B,EAAKgC,QAAO,SAACC,EAAO3H,GAAR,OAAgBA,EAAIiG,OAAS0B,IAAO,KAG/CX,GAlCxB,iBAmCE,IAAQ7B,EAAI,EAAGA,EAAI,EAAGA,IACrBX,EAAOW,GAAGoC,UAAU,MAAO,QAASf,GApCvC,OAuCEoB,IAvCF,2BA8DC,IAnBAJ,GAA4BC,GAGxBI,EA9CL,UA8CoBnC,IAEVoC,MAAK,SAAUlD,EAAGmD,GAC1B,OAAInD,EAAEuB,KAAO4B,EAAE5B,MACN,EAELvB,EAAEuB,KAAO4B,EAAE5B,KACP,EAED,KAGJ6B,EAAiBH,EAASI,MAAM,EAAG,GAEnCC,EAAajE,OADDuD,EAAcV,EACM,GAAG5C,QAAQ,GAAK,OAE3CiB,EAAI,EAAGA,EAAI,EAAGA,IACnBO,EAAKP,GAAGY,KAAO,IACjBvB,EAAOW,GAAGoC,UAAU,MAAO,QAASd,GAElCf,EAAKP,GAAGS,MAAQmB,GAClBvC,EAAOW,GAAGoC,UAAU,OAAQ,QAASb,GAIvC,IAAQyB,KAAKH,EACRI,EAASJ,EAAeG,GAAG/D,IAE/BI,EAAO4D,GAAQb,UAAU,OAAQW,EAAYvB,GAG9CiB,IA7ED,6C,sBAkFA,SAASA,IAGR,IAAI,IAAIzC,KAFRX,EAAO,GAAGhC,QAAU,QAEPgC,EACZA,EAAOW,GAAGxC,KAAO0F,KAAKC,MAAM9D,EAAOW,GAAGxC,MAIvC,IAAI,IAAI4F,KAAKnG,EACZA,EAASmG,GAAGrH,SAAS,K,2CCvNvBsH,GAAYhD,OAAM,SAACC,GAClBgD,QAAQC,KAAK,wBAAyBjD,M,IAwDxBkD,E,kDAnDd,WAAY9H,GAAQ,IAAD,8BAClB,cAAMA,IAIP+H,aAAe,SAAAC,GACd,IAAIC,EAAO,YAAOD,GAElB,OADAC,EAAQC,QACDD,EAAQE,IAAI,EAAKC,WARN,EAWnBA,SAAW,SAAAC,GACV,OAAO,cAAC,EAAD,CAAMpH,GAAIoH,EAAM1G,QAASF,OAAQ,EAAKA,OAAQC,KAAM2G,KAV3D,EAAK5G,OAAS7D,EAAQ8B,IAAI,cAAc4I,cAFtB,E,0CAenB,WAGC,OAAS,qCACR,sBAAKrH,GAAG,aAAR,UACC,qBAAKsH,IAAKjG,EAAYkG,IAAI,GAAGnG,MAAO,CAACoG,OAAQ,oBAAqBC,UAAW,UAC7E,qBAAKzH,GAAG,kBAGT,mCACC,cAAC,IAAD,CAAMA,GAAG,eAAe0H,GAAG,YAA3B,SACC,8BAAK,qBAAKtH,KAAK,uBAGhB,yCAGD,+BACC,sBAAKJ,GAAK,oBAAV,UACC,qBAAKA,GAAG,kBAAR,SACC,cAAC,EAAD,CAAMA,GAAI0C,EAAO,GAAGhC,QAASF,OAAO,OAAOC,KAAMiC,EAAO,OAEzD,qBAAKxD,UAAW,iCAAmCV,KAAKgC,OAAxD,SACEhC,KAAKsI,aAAapE,iB,GAxCPrD,IAAMC,W,uBCoCTqI,E,kDAzCX,WAAY5I,GAAQ,IAAD,8BACf,cAAMA,IASV6I,aAAe,SAAAC,GACX,OAAQ,wBAAQtJ,MAAOsJ,EAAf,SAAgCA,GAAPA,IAXlB,EAcnBC,cAAgB,WACZ,OAAO,EAAK/I,MAAMgJ,QAAQb,IAAI,EAAKU,eAfpB,EAkBnBI,aAAe,SAAAC,GACX,EAAK7I,SAAS,CAAE8I,YAAa,EAAKlJ,MAAMkJ,YAAaC,SAAUF,EAAMvI,OAAOnB,QAE5E,EAAKQ,MAAMqJ,QAAX,eAAyBH,EAAMvI,OAAOnB,QAnBtC,EAAKS,MAAQ,CAAEkJ,aAAa,EAAOC,SAAU,EAAKpJ,MAAMoJ,UAFzC,E,0CAKtB,SAAOE,GACN7J,KAAKY,SAAS,CAAE8I,YAAa1J,KAAKQ,MAAMkJ,YAAaC,SAAUE,IAC/D7J,KAAKsJ,kB,oBAkBH,WAEI,OACI,qBAAK5I,UAAU,WAAf,SACI,wBAAOA,UAAU,gBAAjB,UACKV,KAAKO,MAAMuJ,MADhB,IACuB,cAAC,EAAD,CAAYtI,GAAI,oBAAsBxB,KAAKO,MAAMT,KAAM2B,KAAMzB,KAAKO,MAAMwJ,OAC3F,uBACA,wBAAQjK,KAAME,KAAKO,MAAMT,KAAMkK,SAAUhK,KAAKwJ,aAAczJ,MAAOC,KAAKQ,MAAMmJ,SAA9E,SACK3J,KAAKsJ,2B,GAzCPzI,IAAMC,WC0CdmJ,E,kDA9BX,WAAY1J,GAAQ,IAAD,8BACf,cAAMA,IAED2J,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,+CAMnB,SAAYlJ,GACRjB,KAAKO,MAAMqJ,QAAQ3I,EAAEC,OAAOnB,S,oBAGhC,WACI,IAAMqK,EAAcpK,KAAKO,MAAMoJ,WAAa3J,KAAKO,MAAMR,MACvD,OACI,qBAAKW,UAAU,eAAf,SACI,wBAAOA,UAAU,gBAAjB,UACI,uBACIiB,KAAK,QACL7B,KAAME,KAAKO,MAAM8J,UACjBtK,MAAOC,KAAKO,MAAMR,MAClBuK,QAASF,EACTJ,SAAUhK,KAAKkK,cAGnB,+BAAOlK,KAAKO,MAAMR,iB,GApCZc,IAAMC,WCyCjByJ,E,kDAtCX,WAAYhK,GAAQ,IAAD,8BACf,cAAMA,IAOViJ,aAAe,SAAAH,GACX,EAAKzI,SAAS,CAAE+I,SAAUN,IAE1B,EAAK9I,MAAMqJ,QAAX,eAAyBP,IAXV,EAenBmB,aAAe,SAAAnB,GACX,OAAO,cAAC,EAAD,CACHO,QAAS,EAAKJ,aACdG,SAAU,EAAKnJ,MAAMmJ,SACrB5J,MAAOsJ,EACPgB,UAAW,EAAK9J,MAAM8J,WACjBhB,IArBM,EAwBnBoB,mBAAqB,WACjB,OAAO,EAAKlK,MAAMgJ,QAAQb,IAAI,EAAK8B,eAtBnC,EAAKhK,MAAQ,CACTmJ,SAAU,EAAKpJ,MAAMoJ,UAJV,E,0CA4BnB,WACI,OACI,sBAAKjJ,UAAU,iBAAf,UACI,6BAAKV,KAAKO,MAAM8J,YADpB,IACqC,cAAC,EAAD,CAAY7I,GAAI,iBAAmBxB,KAAKO,MAAMT,KAAM2B,KAAMzB,KAAKO,MAAMwJ,OACrG/J,KAAKyK,4B,GAjCG5J,IAAMC,WCyBhB4J,E,kDAtBX,WAAYnK,GAAQ,IAAD,8BACf,cAAMA,IACDiJ,aAAe,EAAKA,aAAaW,KAAlB,gBAFL,E,gDAMnB,WACInK,KAAKO,MAAMqJ,QAAQ5J,Q,oBAGvB,WACI,OACI,qBAAKU,UAAU,cAAf,SACI,wBAAOA,UAAU,iBAAjB,2BACI,uBACA,uBAAOiB,KAAK,SAAS5B,MAAM,QAAQ4K,QAAS3K,KAAKwJ,wB,GApB3C3I,IAAMC,WCgDjB8J,E,kDArCX,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEqK,KAAM,EAAKtK,MAAMsK,MAEhC,EAAKX,YAAc,EAAKA,YAAYC,KAAjB,gBAJJ,E,+CAOnB,WAAe,IAAD,OACVnK,KAAKY,UAAS,SAACkK,GAEpB,OADA,EAAKvK,MAAMqJ,QAAQ,GAAOkB,EAAUD,MAC7B,CAAEA,MAAOC,EAAUD,W,oBAIzB,WACI,OACI,qBAAKnK,UAAU,WAAf,SACI,wBAAOA,UAAU,gBAAjB,UACI,uBACIiB,KAAK,WACL5B,MAAOC,KAAKO,MAAMsK,KAClBP,QAAStK,KAAKQ,MAAMqK,KACpBb,SAAUhK,KAAKkK,cAGlBlK,KAAKO,MAAMuJ,MARhB,IAQuB,cAAC,EAAD,CAAYtI,GAAI,kBAAoBxB,KAAKO,MAAMT,KAAM2B,KAAMzB,KAAKO,MAAMwJ,gB,GAnClFlJ,IAAMC,WCwClBiK,E,kDAjCX,WAAYxK,GAAQ,IAAD,8BACf,cAAMA,IASViJ,aAAe,SAAAC,GACX,EAAK7I,SAAS,CAAEb,MAAO0J,EAAMvI,OAAOnB,QAGpC,EAAKQ,MAAMqJ,QAAX,eAAyBH,EAAMvI,OAAOnB,QAXtC,EAAKS,MAAQ,CAClBT,MAAO,EAAKQ,MAAMR,OAAS,GAC3BiL,YAAa,EAAKzK,MAAMyK,aALJ,E,0CAoBnB,WACI,OACI,qBAAKtK,UAAY,aAAjB,SACI,wBAAOA,UAAU,gBAAjB,UACKV,KAAKO,MAAMuJ,MADhB,IACuB,cAAC,EAAD,CAAYtI,GAAI,iBAAmBxB,KAAKO,MAAMT,KAAM2B,KAAMzB,KAAKO,MAAMwJ,OACxF,uBACA,uBAAOpI,KAAM,SAASqI,SAAUhK,KAAKwJ,aAAcwB,YAAahL,KAAKO,MAAMyK,YAAajL,MAAOC,KAAKQ,MAAMT,iB,GAjCrGc,IAAMC,WCazBmK,EAAe,CACpB,WAAY,UACZ,iBAAkB,gBAClB,YAAa,gBACb,kBAAmB,aACnB,sBAAuB,aACvB,wBAAyB,gBACzB,WAAY,UACZ,KAAQ,cACR,MAAS,QACT,QAAW,aACX,iBAAkB,gBAClB,cAAe,aACf,sBAAuB,eACvB,YAAa,YAGRC,EAAiB,CAEtBC,IAAM,0FACNC,GAAK,yDACLC,WAAa,yEACbC,cAAgB,8IAChBC,iBAAmB,kIACnBC,WAAa,gFACbC,MAAQ,+DACRC,QAAU,8BACVC,QAAU,gCACVC,SAAW,8CACXC,cAAgB,wBA8IFC,G,kDA/Gd,WAAYvL,GAAQ,IAAD,EAGlB,IAAI,IAAI0H,KAHU,qBAClB,cAAM1H,IA1BPwL,eAAiB,CAChB,CAAEpK,KAAMoJ,EAAYjB,MAAO,WAAYC,KAAMmB,EAAec,SAE5D,CAAErK,KAAMoJ,EAAYjB,MAAO,YAAaC,KAAMmB,EAAeE,IAC7D,CAAEzJ,KAAMoJ,EAAYjB,MAAO,kBAAmBC,KAAMmB,EAAeG,YACnE,CAAE1J,KAAMoJ,EAAYjB,MAAO,sBAAuBC,KAAMmB,EAAeI,eACvE,CAAE3J,KAAMoJ,EAAYjB,MAAO,wBAAyBC,KAAMmB,EAAeK,mBAmBvD,EAdnBU,eAAiB,CAChB,CAAEtK,KAAM4I,EAAYF,UAAW,QAASV,SAAU,WAAYJ,QAAS,CAAC,WAAY,UAAWQ,KAAMmB,EAAeO,OACpH,CAAE9J,KAAM4I,EAAYF,UAAW,UAAWV,SAAU,SAAUJ,QAAS,CAAC,OAAQ,UAAWQ,KAAMmB,EAAeQ,SAEhH,CAAE/J,KAAM4I,EAAYF,UAAW,cAAeV,SAAU,UAAWJ,QAAS,CAAC,UAAW,WAAYQ,KAAMmB,EAAeS,UAUvG,EANnBO,kBAAoB,CACnB,CAAEvK,KAAMwH,EAAUW,MAAO,YAAaH,SAAU,SAAUJ,QAAS,CAAC,QAAS,SAAU,SAAUQ,KAAMmB,EAAeU,UACtH,CAAEjK,KAAM+I,IAOK,EAAKqB,eACjB,EAAKA,eAAe9D,GAAK,EAAKkE,gBAAgB,EAAKJ,eAAe9D,IAGnE,IAAI,IAAIA,KAAK,EAAKgE,eACjB,EAAKA,eAAehE,GAAK,EAAKkE,gBAAgB,EAAKF,eAAehE,IAGnE,IAAI,IAAIA,KAAK,EAAKiE,kBACjB,EAAKA,kBAAkBjE,GAAK,EAAKkE,gBAAgB,EAAKD,kBAAkBjE,IAZvD,S,mDAkBnB,SAAgBmE,GACf,IAAMzK,EAAOyK,EAASzK,YACfyK,EAASzK,KAEbA,IAASoJ,IACXqB,EAASpB,YAAcoB,EAAStC,OAGjC,IAAMuC,EAAUrM,KAAKsM,gBAAgB3K,EAAMyK,GAe3C,OAbe,OAAZC,GACFD,EAASC,EAAQ,IAAMA,EAAQ,GAC/BD,EAASjI,IAAMkI,EAAQ,IAGvBD,EAASjI,IAAM,cAGEtD,IAAM0L,cAAc5K,EAApB,2BACdyK,GADc,IAEjBxC,QAAS5J,KAAKwM,OAAOrC,KAAKnK,W,6BAQ5B,SAAgB2B,EAAMyK,GACrB,IAAMK,EAAeL,EAAStC,OAASsC,EAAS/B,UAChD,IAAIoC,EAAc,OAAO,KAEzB,IAAMJ,EAAUlO,EAAQ8B,IAAIgL,EAAawB,EAAa5D,gBAEtD,OAAGlH,IAASoJ,EACJ,CAAC,QAASsB,GAAW,GAAII,GAEzB9K,IAASiJ,EACT,CAAC,OAAQyB,EAASI,GAElB9K,IAAS4I,GAAc5I,IAASwH,EAChC,CAAC,WAAYkD,EAASI,GAGvB,O,oBAKR,SAAOC,EAAW3M,GACjB,GAAG2M,aAAqBhC,EAGvB,OAFArL,aAAasN,aACbC,OAAOC,SAASC,SAIjB,IAAMhD,EAAQ4C,EAAUnM,MAAMuJ,OAAS4C,EAAUnM,MAAM8J,UACjDoC,EAAexB,EAAanB,EAAMjB,eAExC1K,EAAQ0B,IAAI4M,EAAc1M,GAC1B5B,EAAQkC,Y,oBAIT,WACC,OAAS,qCACR,mCACC,cAAC,IAAD,CAAMmB,GAAG,UAAU0H,GAAG,IAAIyB,QAAW,WAAQiC,OAAOC,SAASjL,KAAO,eAApE,SACC,8BAAK,qBAAKA,KAAK,mBAGhB,yCAGD,sBAAMJ,GAAG,gBAAT,SACC,sBAAKA,GAAG,qBAAR,UACC,oBAAIA,GAAG,iBAAP,sBACA,qBAAKA,GAAG,eAAR,SACExB,KAAK+L,iBAEP,qBAAKvK,GAAG,eAAR,SACExB,KAAKiM,iBAEP,qBAAKzK,GAAG,kBAAR,SACExB,KAAKkM,gC,GAhIWrL,IAAMC,WClDd,OAA0B,kCCIzC,sBAAC,8BAAAwD,EAAA,sEACuBjB,MAAM0J,IAD7B,cACMC,EADN,gBAEmBA,EAASvL,OAF5B,OAEMA,EAFN,OAIAwL,SAASC,eAAe,kBAAkBC,UAAY1L,EAJtD,0CAAD,GCMA2L,IAASC,OACR,eAAC,IAAMC,WAAP,WACC,qBAAK9L,GAAG,mBACR,cAAC,IAAD,CAAe+L,SAAUC,eAAzB,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIhB,UAAWrE,IACjC,cAAC,IAAD,CAAOqF,KAAK,YAAYhB,UAAWZ,aAItCmB,SAASC,eAAe,SAMzBxP,M","file":"static/js/main.0d1d50b1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/background_hd.5aa2853a.png\";","// Load / Store settings with localStorage\r\n\r\nconst Storage = {\r\n\tzipCode: null,\r\n\r\n\tsquareFootage: null,\r\n\tsprinklerFlow: null,\r\n\r\n\tminRainChance: 0.2,\r\n\tminRainAmt: 1,\r\n\r\n\ttempThresh: null,\r\n\r\n\tdaySkip: null,\r\n\tdaySkipAuto: true,\r\n\r\n\t// 7 days displayed, no need for setting\r\n\r\n\tdisplayFmt: \"Narrow\",\r\n\tnotifAdvance: null,\r\n\tnotifDevices: null,\r\n\r\n\tunits: \"Imperial\",\r\n\ttimeFormat: \"12 Hour\",\r\n\ttextSize: \"Normal\",\r\n\r\n\trefreshPeriod: null,\r\n\r\n\r\n\t// Read all settings from localStorage\r\n\t_read() {\r\n\t\tlet settings_str = localStorage.getItem('settings');\r\n\r\n\t\tif(!settings_str) return {};\r\n\t\treturn JSON.parse(settings_str);\r\n\t},\r\n\r\n\r\n\t// Write a group of settings to localStorage\r\n\t_write(obj) {\r\n\t\tlocalStorage.setItem(\"settings\", JSON.stringify(obj));\r\n\t},\r\n\r\n\r\n\t// Set / update a setting\r\n\tset(name, value) {\r\n\t\tif(!(name in this)) return; // Invalid setting name\r\n\t\tthis[name] = value;\r\n\t},\r\n\r\n\t// Get a setting\r\n\tget(name) {\r\n\t\treturn this[name];\r\n\t},\r\n\r\n\r\n\t// Load all settings from localStorage\r\n\tload() {\r\n\t\tlet saved = this._read();\r\n\r\n\t\tfor(let s in saved) {\r\n\t\t\tthis[s] = saved[s];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Save all settings to localStorage\r\n\tsaveAll() {\r\n\t\tlet obj = {\r\n\t\t\t\"zipCode\": null,\r\n\t\t\t\"squareFootage\": null,\r\n\t\t\t\"sprinklerFlow\": null,\r\n\t\t\t\"tempThresh\": null,\r\n\t\t\t\"minRainAmt\": null,\r\n\t\t\t\"minRainChance\": null,\r\n\t\t\t\"daySkip\": null,\r\n\t\t\t\"daySkipAuto\": null,\r\n\t\t\t\"units\": null,\r\n\t\t\t\"displayFmt\": null,\r\n\t\t\t\"refreshPeriod\": null,\r\n\t\t\t\"timeFormat\": null,\r\n\t\t\t\"notifAdvance\": null,\r\n\t\t\t\"textSize\": null\r\n\t\t};\r\n\r\n\t\tfor(let name in obj) {\r\n\t\t\tobj[name] = this[name];\r\n\t\t}\r\n\r\n\t\tthis._write(obj);\r\n\t}\r\n}\r\n\r\n\r\nStorage.load();\r\nexport default Storage;\r\n","import React from 'react';\r\n\r\nclass ToolTip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    render() {\r\n        // let {state} = this;\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.visible ? (\r\n                        <div className=\"tooltip-content\"> {this.props.info}</div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    show() {\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    hide() {\r\n        this.setState({ visible: false });\r\n    }\r\n\r\n}\r\n\r\nclass ToolTipBtn extends React.Component{\r\n    // events = {}\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { id: props.id, text: props.text}\r\n        this.tooltip = React.createRef();\r\n    }\r\n\r\n    onMouseOver = e => {\r\n        if (e.target != null) {\r\n            this.tooltip.current.show();    \r\n        }\r\n    }\r\n\r\n    onMouseOut = e => {\r\n        this.tooltip.current.hide();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"tooltip-spawner\">\r\n                <button type=\"tooltip-button\" id={this.state.id} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\r\n                    <svg className=\"buttonSVG\">\r\n                        <use href=\"#info\" />\r\n                    </svg>\r\n                </button>\r\n                <ToolTip ref={this.tooltip} info={this.props.text }/>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport { ToolTip, ToolTipBtn };\r\n","import React from 'react';\r\nimport Storage from './settings-components/storage.js';\r\nimport { ToolTip } from './settings-components/tooltip.js';\r\nconst cardList = [];\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.tooltip = React.createRef();\r\n\t}\r\n\tdayName() {\r\n\t\tswitch (this.props.layout) {\r\n\t\t\tcase \"narrow\":\r\n\t\t\t\treturn this.props.data.dayName.substring(0,2);\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.props.data.dayName;\r\n\t\t}\r\n\t}\r\n\r\n\tgetColor() {\r\n\t\tconst t = this.props.data.temp\r\n\t\tvar ret = [0,0,0]\r\n\t\tif (t >= 80) {\r\n\t\t\tret[0] = 190;\r\n\t\t\tret[1] = 50 - (t - 80);\r\n\t\t\tret[2] = 50 - (t - 80);\r\n\t\t} /*else if (t >= 60) {\r\n\t\t\tret[0] = 175;\r\n\t\t\tret[1] = 150;\r\n\t\t\tret[2] = 100 - 5* (t-60);\r\n\t\t}*/ else if (t >= 50) {\r\n\t\t\tret[0] = (t - 50) * 6;\r\n\t\t\tret[1] = 145 - 5 * (t - 50);\r\n\t\t\tret[2] = 190 - 8 * (t - 50);\r\n\t\t} else {\r\n\t\t\tret = [245,245,255, \"25%\"]\r\n\t\t}\r\n\t\t\r\n\t\tif (this.props.data.weather ===\"rainy\") {\r\n\t\t\tret[0] = 30;\r\n\t\t\tret[1] = 99;\r\n\t\t\tret[2] = 190;\r\n\t\t\tret[3] = \"100%\";\r\n\t\t}\r\n\t\treturn \"rgb(\" + ret + \")\";\r\n\t}\r\n\r\n\t// The order of this seems to be consistent, so this should be fine\r\n\tcomponentDidMount() {\r\n\t\tcardList.push(this);\r\n\t}\r\n\r\n\tgetFontSizes(layout) {\r\n\t\tconst font_size = Storage.get(\"textSize\")\r\n\t\tconst font_sizes = { 'Small': 0.5, 'Normal': 1, 'Large': 1.5 };\r\n\t\tconst fontModifier = font_sizes[font_size];\r\n\t\tif (layout === \"wide\") {\r\n\t\t\treturn [\"calc(\" + fontModifier + \"*24px)\",\"calc(\" + fontModifier + \"*48px)\"]\r\n\t\t} else {\r\n\t\t\treturn [\"calc(\" + fontModifier + \"*1.4em)\",\"calc(\" + fontModifier + \"*1.4em)\"]\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonMouseOver = e => {\r\n        if (e.target != null) {\r\n            this.tooltip.current.show();    \r\n        }\r\n    }\r\n\r\n    onMouseOut = e => {\r\n        this.tooltip.current.hide();\r\n    }\r\n\r\n\r\n\trender() {\r\n\t\tconst fontSizes = this.getFontSizes(this.props.layout)\r\n\t\treturn (\r\n\t\t\t<div className={`card card-${this.props.layout}`} style={{ background: this.getColor() }} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut} >\r\n\t\t\t\t<ToolTip ref={this.tooltip} info={this.props.data.explanation }/>\r\n\t\t\t\t<h2 style={{ fontSize: fontSizes[0] }}>{this.dayName()}</h2>\r\n\t\t\t\t<div className=\"card-info\">\r\n\t\t\t\t\t<div className=\"card-weather\" style={{fontSize: fontSizes[1]} }>\r\n\t\t\t\t\t\t<div><svg className = \"largeIcon\"><use href={`#icon-weather-${this.props.data.weather}`} /></svg></div>\r\n\t\t\t\t\t\t{this.props.layout === 'wide' ? <div style={{ flexGrow: \"5\" }}/> : ''}\r\n\t\t\t\t\t\t<div><span>{this.props.data.gTempStr(Storage.get(\"units\"))}</span></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ flexGrow: \"20\" }} />\r\n\t\t\t\t\t<div style={{fontSize: fontSizes[0]} } className=\"card-schedule\">\r\n\t\t\t\t\t\t<div><svg className = \"smallIcon\"><use href=\"#icon-clock\" /></svg></div>\t\r\n\t\t\t\t\t\t<div><span>{this.props.data.gTimeStr(Storage.get(\"timeFormat\"))}</span></div>\r\n\r\n\t\t\t\t\t\t<div><svg  className = \"smallIcon\"><use href=\"#icon-hourglass\" /></svg></div>\r\n\t\t\t\t\t\t<div><span>{this.props.data.duration}</span></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport { Card, cardList };\r\n\r\n","import Storage from './settings-components/storage.js'\r\nimport { cardList } from './Card.js';\r\n\r\nconst fetch = require('node-fetch');\r\nconst moment = require('moment');\r\n\r\n\r\nclass WaterData {\r\n\tconstructor(dayName='', weather=null, temp=null, startTime=null, duration=null, explanation=null) {\r\n\t\tthis.dayName = dayName;\r\n\t\tthis.weather = weather;\r\n\t\tthis.temp = temp;\r\n\t\tthis.startTime = startTime;\r\n\t\tthis.duration = duration;\r\n\t\tthis.explanation = explanation;\r\n\t}\r\n\r\n\t// base unit is always fahrenheit\r\n\tgTempStr(units) {\r\n\t\tif (!Storage.get(\"zipCode\")) {\r\n\t\t\treturn \"No Zip Code!\"\r\n\t\t}\r\n\t\tvar temp;\r\n\t\tvar unitIndic = \"f\";\r\n\t\tif (units === \"Metric\") {\r\n\t\t\ttemp = Number((this.temp - 32) / 1.8).toFixed(0);\r\n\t\t\tunitIndic = \"c\";\r\n\t\t} else {\r\n\t\t\ttemp = this.temp;\r\n\t\t}\r\n\t\treturn temp + \"°\" + unitIndic.toUpperCase();\r\n\t}\r\n\r\n\tsetWeather(day, temp, weather) {\r\n\t\tthis.dayName = day;\r\n\t\tthis.temp = temp;\r\n\t\tthis.weather = weather;\r\n\t}\r\n\r\n\tsetAdvice( time, duration, expl) {\r\n\t\tthis.startTime = time;\r\n\t\tthis.duration = duration;\r\n\t\tthis.explanation = expl;\r\n\t}\r\n\r\n\tgTimeStr(units) {\r\n\t\tif (this.startTime === \"n/a\") {\r\n\t\t\treturn this.startTime;\r\n\t\t} else if (units === \"24 Hour\") {\r\n\t\t\treturn moment(this.startTime, [\"h:mm A\"]).format(\"HH:mm\");\r\n\t\t} else {\r\n\t\t\treturn this.startTime;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n//later used to store info returned by API\r\nconst weather = {};\r\nlet advice = [\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData(),\r\n\tnew WaterData()\r\n];\r\n// API Key\r\nconst key = \"549d95480b954727bd5f2ff0a254e8b7\";\r\n\r\n//need a place to input zipcode (box or whatever) - then call getWeather(zip), with zip being the zipcode\r\n\r\n// get weather from API\r\nasync function getWeather(zip) {\r\n\tlet api_url = `https://api.weatherbit.io/v2.0/forecast/daily?postal_code=${zip}&units=I&key=${key}`;\r\n\r\n\tconst api_res = await fetch(api_url);\r\n\r\n\treturn new Promise((res, rej) => {\r\n\t\tapi_res.json().then((info) => {\r\n\t\t\tfor(let i in info.data)\r\n\t\t\t\tweather[i] = info.data[i];\r\n\r\n\t\t\tweather.city = info.city_name;\r\n\t\t\tweather.country = info.country_code;\r\n\r\n\t\t\tres(true);\r\n\t\t}).catch((err) => {\r\n\t\t\tres(false);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n\r\nfunction convWeather(code) {\r\n\tif ((200 <= code && code <= 522) || (code === 900)) {\r\n\t\treturn \"rainy\";\r\n\t} else if ((700 <= code && code <= 751) || (803 <= code && code <= 804)) {\r\n\t\treturn \"cloudy\";\r\n\t} else if (code === 800) {\r\n\t\treturn \"sunny\";\r\n\t} else if (801 <= code && code <= 802) {\r\n\t\treturn \"partly-cloudy\";\r\n\t} else {\r\n\t\treturn \"none\";\r\n\t}\r\n}\r\n\r\nconst days = [];\r\nfunction getDaysList(){\r\n\tfor(let i = 0; i < 8; i++)\r\n\t{\r\n\t\tdays[i] = {\r\n\t\t\tday: i,\r\n\r\n\t\t\thigh: weather[i].max_temp,\r\n\t\t\tavg: weather[i].temp,\r\n\t\t\tlow: weather[i].min_temp,\r\n\r\n\t\t\tinches: weather[i].precip,\r\n\t\t\twind: weather[i].wind_spd,\r\n\t\t\tweather: convWeather(weather[i].weather.code),\r\n\r\n\t\t\tdate: weather[i].datetime\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst suffRain = \"It will rain enough this week that you do not need to water your lawn.\";\r\nconst freezing = \"The temperature will drop below freezing. You should blow out your sprinklers.\";\r\nconst cooldown = `The temperature may be above ${Storage.get('tempThresh') || 90} degrees today. You should water your lawn for 5 minutes to cool it off.`;\r\nconst leastWindy = \"This day is one of the three least windy days this week, so it is a good time to water your lawn.\";\r\nconst otherDays = \"Watering will already be done on other days this week.\"\r\n\r\nasync function getAdvice() {\r\n\t// Wait for the weather data to arrive\r\n\tlet success = await getWeather(Storage.zipCode);\r\n\tif(!success) return false; // Probably no Zip Code specified\r\n\r\n\t//now, when people leave these fields blank in the settings, the math will still work/do stuff\r\n\tvar squareFt = Storage.get('squareFootage');\r\n\tvar flowRt = 20;\r\n\tif (Storage.get('sprinklerFlow') !== null && squareFt !== null) {\r\n\t\tflowRt = (1/(Storage.get('sprinklerFlow')))*(squareFt)*(144/231);\r\n\t}\r\n\tvar tmpThresh = Storage.get(\"tempThresh\") || 90;\r\n\tvar rainAmtThresh = 1;\r\n\tif (Storage.get('minRainAmt') !== null) {\r\n\t\trainAmtThresh = Storage.get('minRainAmt');\r\n\t}\r\n\t// var rainChanceThresh = Storage.get('minRainChance');\r\n\r\n\r\n\tgetDaysList();\r\n\r\n\tfor (let i = 0; i < 8; i++){\r\n\t\tvar corrDay = days[i];\r\n\t\tvar dateBits = corrDay.date.split('-');\r\n\t\tvar date = new Date(dateBits[0], dateBits[1] - 1, dateBits[2]);\r\n\r\n\t\tadvice[i].setWeather(date.toDateString().substring(0, 3), corrDay.avg, corrDay.weather);\r\n\t\tadvice[i].setAdvice(\"n/a\", \"0 min\", otherDays);\r\n\t}\r\n\r\n\tvar totalInches = rainAmtThresh;\r\n\tvar projectedPrecip = days.reduce((total, obj) => obj.inches + total, 0);\r\n\r\n\t//checks if there will be enough precipitation that the user doesn't need to water their lawn\r\n\tif (projectedPrecip >= rainAmtThresh) {\r\n\t\tfor(let i = 0; i < 8; i++) {\r\n\t\t\tadvice[i].setAdvice(\"n/a\", \"0 min\", suffRain);\r\n\t\t}\r\n\r\n\t\tapplyAdvice();\r\n\t\treturn;\r\n\t}\r\n\t//if there is only some precipitation, subtract that amount from the total desired inch\r\n\ttotalInches = totalInches - projectedPrecip;\r\n\r\n\t// could be a lot less sloppy with memory by only taking the necessary parametres, but eh.\r\n\tlet windDays = [...days];\r\n\r\n\twindDays.sort(function (a, b) {\r\n\t\tif (a.wind < b.wind) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.wind > b.wind) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t});\r\n\r\n\tlet lowestWindDays = windDays.slice(0, 3); // amount of days returned can be changed by adjusting latter term\r\n\tvar totalMins = totalInches * flowRt;\r\n\tvar minsPerDay = Number(totalMins / 3).toFixed(0) + \" min\"; // this is where flow rate can be set\r\n\r\n\tfor (let i = 0; i < 8; i++){\r\n\t\tif(days[i].low <= 32) {\r\n\t\t\tadvice[i].setAdvice(\"n/a\", \"0 min\", freezing);\r\n\t\t}\r\n\t\tif(days[i].high >= tmpThresh) {\r\n\t\t\tadvice[i].setAdvice(\"6 am\", \"5 min\", cooldown);\r\n\t\t}\r\n\t}\r\n\r\n\tfor(let d in lowestWindDays) {\r\n\t\tlet dayIdx = lowestWindDays[d].day;\r\n\r\n\t\tadvice[dayIdx].setAdvice(\"6 am\", minsPerDay, leastWindy);\r\n\t}\r\n\r\n\tapplyAdvice();\r\n}\r\n\r\n\r\n// Update cards with the weather advice\r\nfunction applyAdvice() {\r\n\tadvice[0].dayName = \"Today\";\r\n\r\n\tfor(let i in advice) {\r\n\t\tadvice[i].temp = Math.round(advice[i].temp);\r\n\t}\r\n\r\n\t// Although they have no state, this seems to work\r\n\tfor(let c in cardList) {\r\n\t\tcardList[c].setState({});\r\n\t}\r\n}\r\n\r\n\r\nexport { WaterData, getAdvice, advice };\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport './common/common.css';\r\nimport './App.css';\r\n\r\nimport background from \"./images/background_hd.png\";\r\n\r\nimport { Card } from './Card.js';\r\nimport { getAdvice, advice } from './WeatherAPIMod.js'\r\nimport Storage from './settings-components/storage.js'\r\n\r\n\r\ngetAdvice().catch((err) => {\r\n\tconsole.warn(\"Error getting advice:\", err);\r\n});\r\n\r\nclass App extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.layout = Storage.get(\"displayFmt\").toLowerCase();\r\n\t}\r\n\r\n\tgetWeekItems = list => {\r\n\t\tvar newList = [...list]\r\n\t\tnewList.shift();\r\n\t\treturn newList.map(this.makeItem);\r\n\t}\r\n\r\n\tmakeItem = input => {\r\n\t\treturn <Card id={input.dayName} layout={this.layout} data={input}/>\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\t\treturn ( <>\r\n\t\t\t<div id=\"bg-wrapper\">\r\n\t\t\t\t<img src={background} alt=\"\" style={{height: \"max(100vh, 100vw)\", objectFit: \"fill\"} }/>\r\n\t\t\t\t<div id=\"bg-overlay\"></div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<header>\r\n\t\t\t\t<Link id=\"nav-settings\" to=\"/settings\">\r\n\t\t\t\t\t<svg><use href=\"#icon-settings\" /></svg>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<h1>Flow</h1>\r\n\t\t\t</header>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<div id = \"content-container\">\r\n\t\t\t\t\t<div id=\"today-container\">\r\n\t\t\t\t\t\t<Card id={advice[0].dayName} layout=\"wide\" data={advice[0]}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"week-container week-container-\" + this.layout}>\r\n\t\t\t\t\t\t{this.getWeekItems(advice)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</>);\r\n\t}\r\n\t\r\n\t// <Dropdown selected=\"0\" options={[\"0\", \"1\", \"2\"]} label=\"test\" cHandle={() => { } }/>\r\n\t// <RadioPanel panelName=\"test\" selected=\"0\" options={[\"0\", \"1\", \"2\"]} cHandle={() => { } }/>\r\n\t// <ValueField value=\"test\" label=\"name\" cHandle={() => { } }/>\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { ToolTipBtn } from './tooltip';\r\n\r\nclass Dropdown extends React.Component {\r\n    /* \r\n        necessary:\r\n        options (list of options)\r\n        selected (specifies which of items in options is default)\r\n        label (string)\r\n        cHandle (function to push state up. needs to take event value as param.)\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isDisplayed: false, selected: this.props.selected };\r\n    }\r\n\r\n\tselect(item) {\r\n\t\tthis.setState({ isDisplayed: this.state.isDisplayed, selected: item});\r\n\t\tthis.renderOptions();\r\n\t}\r\n\r\n    renderOption = val => {\r\n        return (<option value={val} key={val }>{val}</option>);\r\n    }\r\n    \r\n    renderOptions = () => {\r\n        return this.props.options.map(this.renderOption);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ isDisplayed: this.state.isDisplayed, selected: event.target.value });\r\n\r\n        this.props.cHandle(this, event.target.value);\r\n    }\r\n\r\n\r\n    render() {\r\n        // is this.props.tag necessary\r\n        return (\r\n            <div className=\"Dropdown\">\r\n                <label className=\"settingsLabel\">\r\n                    {this.props.label} <ToolTipBtn id={\"tooltip-dropdown-\" + this.props.name} text={this.props.desc }/>\r\n                    <br/>\r\n                    <select name={this.props.name} onChange={this.handleChange} value={this.state.selected}>\r\n                        {this.renderOptions()}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\n\r\nclass RadioButton extends React.Component{\r\n    /* \r\n        This is only a single button within a setting featuring other options.\r\n\r\n        Required Props:\r\n        - cHandle(func)\r\n        - selected (string)\r\n        - value (string)\r\n        - panelName (string)\r\n    */\r\n    \r\n    // will inclusion of selected in constructor screw with whether the rendered element thinks it's checked?\r\n    // what does event actually mean?\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.props.cHandle(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const isSelected = (this.props.selected === this.props.value);\r\n        return (\r\n            <div className=\"RadioElement\">\r\n                <label className=\"settingsLabel\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name={this.props.panelName}\r\n                        value={this.props.value}\r\n                        checked={isSelected}\r\n                        onChange={this.handleClick}\r\n                        // className?\r\n                    />\r\n                    <span>{this.props.value}</span>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadioButton;\r\n","import React from 'react';\r\nimport RadioButton from './radiob';\r\nimport { ToolTipBtn } from './tooltip';\r\n\r\nclass RadioPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            selected: this.props.selected\r\n        };\r\n    }\r\n\r\n    handleChange = val => {\r\n        this.setState({ selected: val });\r\n\r\n        this.props.cHandle(this, val);\r\n        // need to push up?\r\n    }\r\n\r\n    createButton = val => {\r\n        return <RadioButton\r\n            cHandle={this.handleChange}\r\n            selected={this.state.selected} // does this break anything? should it be props?\r\n            value={val}\r\n            panelName={this.props.panelName}\r\n            key={val}\r\n        />\r\n    }\r\n    createRadioButtons = () => {\r\n        return this.props.options.map(this.createButton);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RadioContainer\">\r\n                <h3>{this.props.panelName }</h3> <ToolTipBtn id={\"tooltip-radio-\" + this.props.name} text={this.props.desc }/>\r\n                {this.createRadioButtons()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadioPanel;\r\n","import React from 'react';\r\n\r\nclass ResetButton extends React.Component {\r\n    /*\r\n        required params:\r\n        cHandle (function to push state up. needs to take event value as param.)\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    \r\n    handleChange() {\r\n        this.props.cHandle(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ResetButton\">\r\n                <label className=\"settings-label\">Settings Reset\r\n                    <br/>\r\n                    <input type=\"button\" value=\"RESET\" onClick={this.handleChange}/>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetButton;\r\n","import React from 'react';\r\nimport { ToolTipBtn } from './tooltip';\r\n\r\nclass ToggleButton extends React.Component {\r\n\r\n    /* \r\n        Props Required:\r\n        - label (string)\r\n        - isOn (bool)\r\n        - cHandle(func) // shouldn't need to accept parameters, as it just needs to toggle the right thing in the class.\r\n\r\n        If necessary, could have some small changes for a multi-tick system.\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOn: this.props.isOn };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState((prevState) => {\r\n\t\t\tthis.props.cHandle(this, !prevState.isOn);\r\n\t\t\treturn { isOn: !prevState.isOn };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CheckBox\">\r\n                <label className=\"settingsLabel\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={this.props.isOn} // will this break things?\r\n                        checked={this.state.isOn}\r\n                        onChange={this.handleClick}\r\n                        // className?\r\n                    />\r\n                    {this.props.label} <ToolTipBtn id={\"tooltip-toggle-\" + this.props.name} text={this.props.desc }/>\r\n                </label>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// todo: something for when changes haven't been saved?\r\n\r\n\r\nexport default ToggleButton;\r\n","import React from 'react';\r\nimport { ToolTipBtn } from './tooltip';\r\n\r\nclass ValueField extends React.Component {\r\n    /*\r\n        required params:\r\n        value (initial value)\r\n        label (name)\r\n        cHandle (change handler to push state up. needs to take event value as param.)\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\t\t\tvalue: this.props.value || '',\r\n\t\t\tplaceholder: this.props.placeholder\r\n\t\t};\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n        this.setState({ value: event.target.value });\r\n\r\n        // need to push up?\r\n        this.props.cHandle(this, event.target.value);\r\n    }\r\n\r\n    // HandleClick necessary?\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"ValueField\">\r\n                <label className=\"settingsLabel\">\r\n                    {this.props.label} <ToolTipBtn id={\"tooltip-value-\" + this.props.name} text={this.props.desc}/>\r\n                    <br/>\r\n                    <input type= \"number\" onChange={this.handleChange} placeholder={this.props.placeholder} value={this.state.value} />\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValueField;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport './Settings.css';\r\n\r\nimport Storage from \"./settings-components/storage.js\";\r\n\r\nimport Dropdown from './settings-components/dropdown.js';\r\nimport RadioPanel from './settings-components/radio.js';\r\nimport ResetButton from './settings-components/reset.js';\r\nimport ToggleButton from './settings-components/toggle.js';\r\nimport ValueField from './settings-components/valuefield.js';\r\n\r\nimport React from \"react\";\r\n\r\n\r\n// Name mapping, so components link to the correct setting\r\nconst settings_map = {\r\n\t\"zip code\": \"zipCode\",\r\n\t\"square footage\": \"squareFootage\",\r\n\t\"flow rate\": \"sprinklerFlow\",\r\n\t\"temp. threshold\": \"tempThresh\",\r\n\t\"rain amt. threshold\": \"minRainAmt\",\r\n\t\"rain chance threshold\": \"minRainChance\",\r\n\t\"day skip\": \"daySkip\",\r\n\t\"auto\": \"daySkipAuto\",\r\n\t\"units\": \"units\",\r\n\t\"display\": \"displayFmt\",\r\n\t\"refresh period\": \"refreshPeriod\",\r\n\t\"time format\": \"timeFormat\",\r\n\t\"notification timing\": \"notifAdvance\",\r\n\t\"font size\": \"textSize\"\r\n};\r\n\r\nconst settings_descs = {\r\n\t/* SF : \"(Non-Functional) Square feet in your lawn.\", */\r\n\tZip : \"Zip Code is used to find weather data for your area, to calculate watering information.\",\r\n\tFR : \"Flow rate of your sprinkler head in gallons per minute\",\r\n\tTempThresh : \"If the weather is this temperature or higher do not water on this day.\",\r\n\tRainAmtThresh : \"If rain exceeeds this amount (inches per week), no watering is required. Otherwise, rainfall is removed from the target amount of watering.\",\r\n\tRainChanceThresh : \"(Non-Functional) If rain chance is over this value, then the predicted amount of rain counts towards the rain amount threshold.\",\r\n\tWindThresh : \"(Non-Functional) If wind speed is over this amount, do not water on that day.\",\r\n\tUnits : \"Sets DISPLAY units only. Settings are all in Imperial units.\",\r\n\tDisplay : \"Sets Display Type for week.\",\r\n\tTimeFmt : \"Sets Time format for display.\",\r\n\tFontSize : \"Changes font size of text on the main page.\",\r\n\tNonFunctional : \"Not Implemented Yet.\"\r\n}\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n\tcomponents_top = [\r\n\t\t{ type: ValueField, label: 'Zip Code', desc: settings_descs.ZipDesc},\r\n\t\t// { type: ValueField, label: 'Square Footage', desc: settings_descs.SF},\r\n\t\t{ type: ValueField, label: 'Flow Rate', desc: settings_descs.FR},\r\n\t\t{ type: ValueField, label: 'Temp. Threshold', desc: settings_descs.TempThresh},\r\n\t\t{ type: ValueField, label: 'Rain Amt. Threshold', desc: settings_descs.RainAmtThresh},\r\n\t\t{ type: ValueField, label: 'Rain Chance Threshold', desc: settings_descs.RainChanceThresh },\r\n\t\t// { type: ValueField, label: 'Day Skip', desc: settings_descs.NonFunctional},\r\n\t\t// { type: ToggleButton, label: 'Auto', isOn: true, desc: settings_descs.NonFunctional }\r\n\t];\r\n\r\n\tcomponents_mid = [\r\n\t\t{ type: RadioPanel, panelName: 'Units', selected: 'Imperial', options: ['Imperial', 'Metric'], desc: settings_descs.Units },\r\n\t\t{ type: RadioPanel, panelName: 'Display', selected: 'Narrow', options: ['Wide', 'Narrow'], desc: settings_descs.Display },\r\n\t\t// { type: ValueField, label: 'Refresh Period', desc: settings_descs.NonFunctional },\r\n\t\t{ type: RadioPanel, panelName: 'Time Format', selected: '12 Hour', options: ['12 Hour', '24 Hour'], desc: settings_descs.TimeFmt },\r\n\t\t// { type: ValueField, label: 'Notification Timing', desc: settings_descs.NonFunctional }\r\n\t];\r\n\r\n\tcomponents_bottom = [\r\n\t\t{ type: Dropdown, label: 'Font Size', selected: 'Normal', options: ['Small', 'Normal', 'Large'], desc: settings_descs.FontSize },\r\n\t\t{ type: ResetButton }\r\n\t];\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tfor(let c in this.components_top) {\r\n\t\t\tthis.components_top[c] = this._buildComponent(this.components_top[c]);\r\n\t\t}\r\n\r\n\t\tfor(let c in this.components_mid) {\r\n\t\t\tthis.components_mid[c] = this._buildComponent(this.components_mid[c]);\r\n\t\t}\r\n\r\n\t\tfor(let c in this.components_bottom) {\r\n\t\t\tthis.components_bottom[c] = this._buildComponent(this.components_bottom[c]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Build a single component from a template-like object\r\n\t_buildComponent(template) {\r\n\t\tconst type = template.type;\r\n\t\tdelete template.type; // So the component doesn't receive it\r\n\r\n\t\tif(type === ValueField) {\r\n\t\t\ttemplate.placeholder = template.label;\r\n\t\t}\r\n\r\n\t\tconst setting = this._loadSettingFor(type, template);\r\n\r\n\t\tif(setting !== null) {\r\n\t\t\ttemplate[setting[0]] = setting[1];\r\n\t\t\ttemplate.key = setting[2];\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttemplate.key = 'ResetButton'; // Should be the only one without an associated setting\r\n\t\t}\r\n\r\n\t\tconst component = React.createElement(type, {\r\n\t\t\t...template,\r\n\t\t\tcHandle: this.update.bind(this)\r\n\t\t});\r\n\r\n\t\treturn component;\r\n\t}\r\n\r\n\r\n\t// Load a setting for a template\r\n\t_loadSettingFor(type, template) {\r\n\t\tconst setting_name = template.label || template.panelName;\r\n\t\tif(!setting_name) return null;\r\n\r\n\t\tconst setting = Storage.get(settings_map[setting_name.toLowerCase()]);\r\n\r\n\t\tif(type === ValueField) {\r\n\t\t\treturn ['value', setting || '', setting_name];\r\n\t\t}\r\n\t\telse if(type === ToggleButton) {\r\n\t\t\treturn ['isOn', setting, setting_name];\r\n\t\t}\r\n\t\telse if(type === RadioPanel || type === Dropdown) {\r\n\t\t\treturn ['selected', setting, setting_name];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t// Called when a component's value changes\r\n\tupdate(component, value) {\r\n\t\tif(component instanceof ResetButton) {\r\n\t\t\tlocalStorage.clear();\r\n\t\t\twindow.location.reload();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst label = component.props.label || component.props.panelName;\r\n\t\tconst setting_name = settings_map[label.toLowerCase()];\r\n\r\n\t\tStorage.set(setting_name, value);\r\n\t\tStorage.saveAll(); // Doesn't really affect performance, should be fine\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn ( <>\r\n\t\t\t<header>\r\n\t\t\t\t<Link id=\"nav-app\" to=\"/\" onClick = {() => { window.location.href = \"/Flow-Mines\"; }}>\r\n\t\t\t\t\t<svg><use href=\"#icon-back\" /></svg>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<h1>Flow</h1>\r\n\t\t\t</header>\r\n\r\n\t\t\t<main id=\"main-settings\">\r\n\t\t\t\t<div id=\"settings-container\">\r\n\t\t\t\t\t<h3 id=\"settings-label\">SETTINGS</h3>\r\n\t\t\t\t\t<div id=\"settings-top\">\r\n\t\t\t\t\t\t{this.components_top}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"settings-mid\">\r\n\t\t\t\t\t\t{this.components_mid}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"settings-bottom\">\r\n\t\t\t\t\t\t{this.components_bottom}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</> );\r\n\t}\r\n}\r\n\r\n\r\nexport default Settings;\r\n","export default __webpack_public_path__ + \"static/media/icons.a3486f1d.svg\";","// Load icons from the icons.svg file\r\n\r\nimport icons from \"./icons.svg\";\r\n\r\n(async function() {\r\n\tconst response = await fetch(icons);\r\n\tconst text = await response.text();\r\n\r\n\tdocument.getElementById('icon-container').innerHTML = text;\r\n})();\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport App from './App';\r\nimport Settings from './Settings';\r\n\r\nimport './common/icons.js';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<div id=\"icon-container\"></div>\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL + '/'}>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={App} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}